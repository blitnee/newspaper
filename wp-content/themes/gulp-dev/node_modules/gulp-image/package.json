{
  "_args": [
    [
      {
        "raw": "gulp-image@^2.7.2",
        "scope": null,
        "escapedName": "gulp-image",
        "name": "gulp-image",
        "rawSpec": "^2.7.2",
        "spec": ">=2.7.2 <3.0.0",
        "type": "range"
      },
      "/Users/brittneecostigan/github/wp_themes/newspaper/wp-content/themes/gulp-dev"
    ]
  ],
  "_from": "gulp-image@>=2.7.2 <3.0.0",
  "_id": "gulp-image@2.8.0",
  "_inCache": true,
  "_location": "/gulp-image",
  "_nodeVersion": "6.9.5",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/gulp-image-2.8.0.tgz_1492764421537_0.0748661479447037"
  },
  "_npmUser": {
    "name": "1000ch",
    "email": "shogo.sensui@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "gulp-image@^2.7.2",
    "scope": null,
    "escapedName": "gulp-image",
    "name": "gulp-image",
    "rawSpec": "^2.7.2",
    "spec": ">=2.7.2 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-image/-/gulp-image-2.8.0.tgz",
  "_shasum": "1f6d7db0cc27dede161da7070effb59149bef3e0",
  "_shrinkwrap": null,
  "_spec": "gulp-image@^2.7.2",
  "_where": "/Users/brittneecostigan/github/wp_themes/newspaper/wp-content/themes/gulp-dev",
  "author": {
    "name": "1000ch",
    "email": "shogo.sensui@gmail.com",
    "url": "https://github.com/1000ch"
  },
  "bugs": {
    "url": "https://github.com/1000ch/gulp-image/issues"
  },
  "dependencies": {
    "exec-buffer": "^3.1.0",
    "execa": "^0.6.0",
    "filesize": "^3.3.0",
    "gifsicle": "^3.0.3",
    "guetzli": "^1.0.1",
    "gulp-util": "^3.0.7",
    "is-gif": "^1.0.0",
    "is-jpg": "^1.0.0",
    "is-png": "^1.0.0",
    "is-svg": "^2.0.1",
    "jpeg-recompress-bin": "^3.0.1",
    "jpegoptim-bin": "^3.0.0",
    "mozjpeg": "^4.1.1",
    "optipng-bin": "^3.1.2",
    "pngquant-bin": "^3.1.0",
    "svgo": "^0.7.0",
    "through2-concurrent": "^1.1.1",
    "zopflipng-bin": "^3.0.1"
  },
  "description": "Optimize PNG, JPG, GIF, SVG images with gulp task.",
  "devDependencies": {
    "ava": "^0.18.0"
  },
  "directories": {},
  "dist": {
    "shasum": "1f6d7db0cc27dede161da7070effb59149bef3e0",
    "tarball": "https://registry.npmjs.org/gulp-image/-/gulp-image-2.8.0.tgz"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "gitHead": "12505ed8718f81cda7212b8f8cc956463fd9c0a7",
  "homepage": "https://github.com/1000ch/gulp-image#readme",
  "keywords": [
    "compress",
    "minify",
    "optimize",
    "image",
    "img",
    "jpg",
    "jpeg",
    "png",
    "gif",
    "svg",
    "gulpplugin"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "1000ch",
      "email": "orz1000ch@gmail.com"
    }
  ],
  "name": "gulp-image",
  "optionalDependencies": {},
  "readme": "# [gulp-image](https://npmjs.org/package/gulp-image)\n\nOptimize PNG, JPEG, GIF, SVG images with gulp task.\n\n[![Build Status](https://travis-ci.org/1000ch/gulp-image.svg?branch=master)](https://travis-ci.org/1000ch/gulp-image)\n[![NPM version](https://badge.fury.io/js/gulp-image.svg)](http://badge.fury.io/js/gulp-image)\n[![Dependency Status](https://david-dm.org/1000ch/gulp-image.svg)](https://david-dm.org/1000ch/gulp-image)\n[![devDependency Status](https://david-dm.org/1000ch/gulp-image/dev-status.svg)](https://david-dm.org/1000ch/gulp-image#type=dev)\n\n![](https://raw.github.com/1000ch/gulp-image/master/screenshot/terminal.png)\n\n\n## Install\n\n```bash\n$ npm install --save-dev gulp-image\n```\n\n### External Dendencies\n\n- `brew install libjpeg libpng` on macOS\n- `apt-get install -y libjpeg libpng` on Ubuntu\n\n## Usage\n\nThis is an example of `gulpfile.js`.\n\n```javascript\nconst gulp = require('gulp');\nconst image = require('gulp-image');\n\ngulp.task('image', function () {\n  gulp.src('./fixtures/*')\n    .pipe(image())\n    .pipe(gulp.dest('./dest'));\n});\n\ngulp.task('default', ['image']);\n```\n\nYou can pass an object to `image()` as argument such as following:\n\n```javascript\ngulp.task('image', function () {\n  gulp.src('./fixtures/*')\n    .pipe(image({\n      pngquant: true,\n      optipng: false,\n      zopflipng: true,\n      jpegRecompress: false,\n      jpegoptim: true,\n      mozjpeg: true,\n      guetzli: false,\n      gifsicle: true,\n      svgo: true,\n      concurrent: 10\n    }))\n    .pipe(gulp.dest('./dest'));\n});\n```\n\nSet `false` for optimizers which you don't want to apply. And you can set `concurrent` option to limit the max concurrency in execution.\n\nOptionally you may pass enable and disable options to [svgo](https://github.com/svg/svgo):\n\n```javascript\ngulp.task('image', function () {\n  gulp.src('./fixtures/*')\n    .pipe(image({\n      svgo: { enable: [\"removeRasterImages\"], disable: [\"removeDoctype\"] }\n    }))\n    .pipe(gulp.dest('./dest'));\n});\n```\n\n## License\n\n[MIT](https://1000ch.mit-license.org) Â© [Shogo Sensui](https://github.com/1000ch)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/1000ch/gulp-image.git"
  },
  "scripts": {
    "test": "ava"
  },
  "version": "2.8.0"
}
